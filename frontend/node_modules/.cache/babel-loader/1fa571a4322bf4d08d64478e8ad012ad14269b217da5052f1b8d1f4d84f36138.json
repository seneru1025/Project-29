{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CYBORG\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    if (!username.trim() || !password.trim()) {\n      toast.error('Username and Password cannot be empty!');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/register', {\n        username,\n        password\n      });\n      if (response.status === 201) {\n        toast.success('Registration successful! You can now log in.');\n        navigate('/login'); // Redirect to login page\n      }\n    } catch (error) {\n      toast.error('Registration failed. Try a different username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","toast","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","navigate","handleRegister","trim","error","response","post","status","success","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CYBORG/Desktop/Project/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      toast.error('Username and Password cannot be empty!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/register', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        toast.success('Registration successful! You can now log in.');\r\n        navigate('/login'); // Redirect to login page\r\n      }\r\n    } catch (error) {\r\n      toast.error('Registration failed. Try a different username.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={handleRegister}>Register</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,CAAC,IAAI,CAACJ,QAAQ,CAACI,IAAI,CAAC,CAAC,EAAE;MACxCX,KAAK,CAACY,KAAK,CAAC,wCAAwC,CAAC;MACrD;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,oCAAoC,EAAE;QACtET,QAAQ;QACRE;MACF,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3Bf,KAAK,CAACgB,OAAO,CAAC,8CAA8C,CAAC;QAC7DP,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdZ,KAAK,CAACY,KAAK,CAAC,gDAAgD,CAAC;IAC/D;EACF,CAAC;EAED,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEnB,QAAS;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GnB,OAAA;MAAOoB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEjB,QAAS;MAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/GnB,OAAA;MAAQ0B,OAAO,EAAElB,cAAe;MAAAO,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACjB,EAAA,CAlCQD,QAAQ;EAAA,QAGEJ,WAAW;AAAA;AAAA8B,EAAA,GAHrB1B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}